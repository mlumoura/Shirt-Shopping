{"ast":null,"code":"import productList from './product';\nconst INITIAL_STATE = {\n  value: 0,\n  products: productList,\n  Cart: []\n};\nexport default function cart(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      if (state.value === 0) {\n        let item = {\n          id: action.product.id_product,\n          name: action.product.name_product,\n          price: action.product.price,\n          image: action.product.image,\n          quantity: 1\n        };\n        state.Cart.push(item);\n      } else {\n        let check = false;\n        state.Cart.map((item, key) => {\n          if (item.id === action.product.id_product) {\n            state.Cart[key].quantity++;\n            check = true;\n          }\n        });\n\n        if (!check) {\n          let item = {\n            id: action.product.id_product,\n            name: action.product.name_product,\n            price: action.product.price,\n            image: action.product.image,\n            quantity: 1\n          };\n          state.Cart.push(item);\n        }\n      }\n\n      return { ...state,\n        value: state.value + 1\n      };\n\n    case 'ADD_ITEM':\n      action.product.quantity++;\n      return { ...state,\n        value: action.cart.value + 1\n      };\n\n    case 'REMOVE_ITEM':\n      if (action.product.quantity > 1) {\n        action.product.quantity--;\n        return { ...state,\n          value: action.cart.value - 1\n        };\n      } else {\n        return state;\n      }\n\n    case 'DELETE_ITEM':\n      return { ...state,\n        value: action.cart.value - action.product.quantity,\n        Cart: state.Cart.filter(item => {\n          return item.id !== action.product.id;\n        })\n      };\n\n    case 'CHANGE_CART':\n      return state = action.localCart;\n\n    default:\n      return state;\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/lu/Documentos/Projetos/dioshopping/src/components/store/reducers/cart.js"],"names":["productList","INITIAL_STATE","value","products","Cart","cart","state","action","type","item","id","product","id_product","name","name_product","price","image","quantity","push","check","map","key","filter","localCart"],"mappings":"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","sourcesContent":["import productList from './product';\n\nconst INITIAL_STATE = {\n    value: 0,\n    products: productList,\n    Cart: []\n}\n\nexport default function cart(state = INITIAL_STATE, action){\n    switch(action.type){\n        case 'ADD_TO_CART':\n            if(state.value === 0) {\n                let item = {\n                    id: action.product.id_product,\n                    name: action.product.name_product,\n                    price: action.product.price,\n                    image: action.product.image,\n                    quantity: 1\n                }\n                state.Cart.push(item);\n            } else {\n                let check = false;\n                state.Cart.map((item, key) => {\n                    if(item.id === action.product.id_product){\n                        state.Cart[key].quantity++;\n                        check = true;\n                    }\n                });\n                if (!check){\n                    let item = {\n                        id: action.product.id_product,\n                        name: action.product.name_product,\n                        price: action.product.price,\n                        image: action.product.image,\n                        quantity: 1\n                    }\n                    state.Cart.push(item);\n                }\n            }\n            return {\n                ...state,\n                value: ( state.value + 1)\n            }\n        case 'ADD_ITEM':\n            action.product.quantity++\n            return{\n                ...state,\n                value: ( action.cart.value + 1 )\n            }\n        case 'REMOVE_ITEM':\n            if(action.product.quantity > 1){\n                action.product.quantity--\n                return {\n                    ...state,\n                    value: ( action.cart.value - 1 )\n                }\n            } else {\n                return state;\n            }\n        case 'DELETE_ITEM':\n            return{\n                ...state,\n                value: (action.cart.value - action.product.quantity),\n                Cart: state.Cart.filter(item => {\n                    return item.id !== action.product.id\n                })\n            }\n        case 'CHANGE_CART':\n            return state = action.localCart\n        default:\n            return state;\n    }\n    return state\n}\n"]},"metadata":{},"sourceType":"module"}