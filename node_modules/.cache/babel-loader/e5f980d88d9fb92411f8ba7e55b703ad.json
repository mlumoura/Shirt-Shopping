{"ast":null,"code":"var _jsxFileName = \"/home/lu/Documentos/Projetos/New Shoppping/src/Pages/contato.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Grid, Button, TextField } from '@material-ui/core/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contatos = () => {\n  _s();\n\n  const url = 'http://localhost:5000/message';\n  const [message, setMessage] = useState([]);\n  const [author, setAuthor] = useState('');\n  const [content, setContent] = useState('');\n  const [validator, setValidator] = useState(false);\n  const [render, setRender] = useState(false);\n  const [success, setSuccess] = useState(false);\n  useEffect(async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    setMessage(data);\n  }, [render]);\n\n  const sendMessage = () => {\n    setValidator(false);\n\n    if (author.length <= 0 || content.length <= 0) {\n      return setValidator(!validator);\n    }\n\n    const bodyForm = {\n      email: author,\n      message: content\n    };\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(bodyForm)\n    }).then(response => response.json()).then(data => {\n      if (data.id) {\n        setRender(true);\n        setSuccess(true);\n        setTimeout(() => {\n          setSuccess(false);\n        }, 5000);\n      }\n    });\n    setAuthor('');\n    setContent('');\n    console.log(content);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"name\",\n        label: \"Name\",\n        value: author,\n        onChange: event => {\n          setAuthor(event.target.value);\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"message\",\n        label: \"Message\",\n        value: content,\n        onChange: event => {\n          setContent(event.target.value);\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), validator && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning alert-dismissible fade show mt-2\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Por favor preencha todos os campos!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn-close\",\n        \"data-bs-dismiss\": \"alert\",\n        \"aria-label\": \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success alert-dismissible fade show mt-2\",\n      role: \"alert\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Mensagem foi enviada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: sendMessage,\n      className: \"mt-2\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Sent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), message.map(content => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: content.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: content.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: content.created_at\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)\n      }, content.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Contatos, \"rH+cbW+6y4s/F/hzxGVf0YpYAKE=\");\n\n_c = Contatos;\nexport default Contatos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contatos\");","map":{"version":3,"sources":["/home/lu/Documentos/Projetos/New Shoppping/src/Pages/contato.js"],"names":["useState","useEffect","Grid","Button","TextField","Contatos","url","message","setMessage","author","setAuthor","content","setContent","validator","setValidator","render","setRender","success","setSuccess","response","fetch","data","json","sendMessage","length","bodyForm","email","method","headers","body","JSON","stringify","then","id","setTimeout","console","log","event","target","value","map","created_at"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Grid, Button, TextField } from '@material-ui/core/';\n\nconst Contatos = () => {\n\n    const url = 'http://localhost:5000/message'\n    const [message, setMessage] = useState([]);\n    const [author, setAuthor] = useState('');\n    const [content, setContent] = useState('');\n    const [validator, setValidator] = useState(false);\n    const [render, setRender] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    useEffect(async () => {\n        const response = await fetch(url)\n        const data = await response.json();\n        setMessage(data);\n    }, [render])\n\n    const sendMessage = () => {\n        setValidator(false);\n        if(author.length <= 0 || content.length <= 0){\n            return setValidator(!validator)\n        }\n        const bodyForm = {\n            email: author,\n            message: content,\n        }\n\n        fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(bodyForm)\n        })\n        .then((response) => response.json())\n        .then((data) => {\n            if(data.id) {\n                setRender(true);\n                setSuccess(true);\n                setTimeout(() => {\n                    setSuccess(false);\n                }, 5000)\n            }\n        })\n        \n        setAuthor('');\n        setContent('');\n        \n        console.log(content)\n    }  \n\n    return(\n        <>\n            <Grid container direction=\"row\" xs={12}>\n                <TextField id=\"name\" label=\"Name\" value={author} onChange={(event)=>{setAuthor(event.target.value)}} fullWidth/>\n                <TextField id=\"message\" label=\"Message\" value={content} onChange={(event)=>{setContent(event.target.value)}} fullWidth/>\n            </Grid>\n\n            {validator && \n                <div className=\"alert alert-warning alert-dismissible fade show mt-2\" role=\"alert\">\n                    <strong>Por favor preencha todos os campos!</strong>\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n                </div>\n            }\n\n            {success && \n                <div className=\"alert alert-success alert-dismissible fade show mt-2\" role=\"alert\">\n                    <strong>Mensagem foi enviada</strong>\n                </div>\n            }\n\n            <Button onClick={sendMessage} className=\"mt-2\" variant=\"contained\" color=\"primary\">\n                Sent\n            </Button>\n\n            {message.map((content) => {\n                return(\n                    <div className=\"card mt-2\" key={content.id}>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{content.email}</h5>\n                            <p className=\"card-text\">{content.message}</p>\n                            <p className=\"card-text\"><small className=\"text-muted\">{content.created_at}</small></p>\n                        </div>\n                    </div>\n                )\n            } )}\n        </>\n    )\n}\n\nexport default Contatos;\n"]},"metadata":{},"sourceType":"module"}